{"version":3,"file":"static/js/281.eff1f9d3.chunk.js","mappings":"kJAEaA,EAAU,SAAHC,GAAA,IAAMC,EAAGD,EAAHC,IAAKC,EAAKF,EAALE,MAAOC,EAAMH,EAANG,OAAM,OAC1CC,EAAAA,EAAAA,KAAA,OAAKH,IAAG,YAAAI,OAAcJ,GAAOK,IAAKL,EAAKC,MAAOA,EAAOC,OAAQA,GAAU,C,oECD5DI,EAAY,SAAHP,GAAA,IAAMC,EAAGD,EAAHC,IAAKC,EAAKF,EAALE,MAAOC,EAAMH,EAANG,OAAMK,EAAAR,EAAES,SAAAA,OAAQ,IAAAD,GAAQA,EAAA,OAC9DJ,EAAAA,EAAAA,KAAA,SAAOH,IAAG,WAAAI,OAAaJ,GAAOC,MAAOA,EAAOC,OAAQA,EAAQM,SAAUA,EAAUC,UAAQ,EAACC,MAAI,EAACC,OAAK,EAAAC,SAAC,gDAE5F,C,mJCHGC,EAAqBC,EAAAA,GAAOC,QAAOC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qkBA2BnCC,EAAUJ,EAAAA,GAAOK,EAACC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,yCAIlBI,EAAiBP,EAAAA,GAAOQ,IAAGC,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,iJ,6BCmBxC,GAAeO,EAAAA,EAAAA,IAAf,EAlCoB,SAAHzB,GAAqF,IAA/E0B,EAAK1B,EAAL0B,MAAOC,EAAO3B,EAAP2B,QAASC,EAAM5B,EAAN4B,OAAQC,EAAC7B,EAAD6B,EAAGC,EAAO9B,EAAP8B,QAASC,EAAO/B,EAAP+B,QAASC,EAAQhC,EAARgC,SAQlE,OACEC,EAAAA,EAAAA,MAACnB,EAAkB,CAAAD,SAAA,CAChBkB,GACC3B,EAAAA,EAAAA,KAACG,EAAAA,EAAS,CAACN,IAAK8B,EAAS7B,MAAM,OAAOC,OAAO,SAC3C2B,GACF1B,EAAAA,EAAAA,KAACL,EAAAA,EAAO,CAACE,IAAK6B,EAAS5B,MAAM,OAAOC,OAAO,SACzC,MACJC,EAAAA,EAAAA,KAAC8B,EAAAA,GAAK,CAACC,UAAU,KAAKC,aAAW,EAAAvB,UAC/BT,EAAAA,EAAAA,KAACiC,EAAAA,EAAG,CAACC,QAAQ,SAASC,MAAM,SAAQ1B,UAClCT,EAAAA,EAAAA,KAACkB,EAAc,CAAAT,UACboB,EAAAA,EAAAA,MAACO,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAG/B,SAAA,EAClCT,EAAAA,EAAAA,KAAA,MAAAS,SAAKgB,EAAEH,MACPtB,EAAAA,EAAAA,KAACe,EAAO,CAAAN,SAAEgB,EAAEF,KACXC,IACCxB,EAAAA,EAAAA,KAACyC,EAAAA,EAAM,CAACC,KAAK,SAASC,QAAS,kBArB3BC,EAqB0ChB,GAAY,eApBtDiB,SAASC,eAAeF,GAChCG,eAAe,CACrBC,SAAU,WAHG,IAACJ,CAqBgE,EAACnC,SAClEgB,EAAED,gBASrB,G","sources":["common/PngIcon/index.tsx","common/VideoIcon/index.tsx","components/MiddleBlock/styles.tsx","components/MiddleBlock/index.tsx"],"sourcesContent":["import { PngIconProps } from \"../types\";\r\n\r\nexport const PngIcon = ({ src, width, height }: PngIconProps) => (\r\n  <img src={`/img/png/${src}`} alt={src} width={width} height={height} />\r\n);\r\n","import { VideoIconProps } from \"../types\";\r\n\r\nexport const VideoIcon = ({ src, width, height, controls = false }: VideoIconProps) => (\r\n  <video src={`/videos/${src}`} width={width} height={height} controls={controls} autoPlay loop muted>\r\n    Your browser does not support the video tag.\r\n  </video>\r\n);","import styled from \"styled-components\";\r\n\r\nexport const MiddleBlockSection = styled.section`\r\n  position: relative;\r\n  padding: 7.5rem 0 3rem;\r\n  text-align: center;\r\n  display: flex;\r\n  justify-content: center;\r\n  overflow: hidden;\r\n  color: white;\r\n\r\n  /* Ensures that video or image background does not block other content */\r\n  video,\r\n  img {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n    opacity: 0.4; /* Adjust transparency here */\r\n    z-index: 0; /* Places the video or image below other content */\r\n  }\r\n\r\n  @media screen and (max-width: 1024px) {\r\n    padding: 5.5rem 0 3rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled.p`\r\n  padding: 0.75rem 0 0.75rem;\r\n`;\r\n\r\nexport const ContentWrapper = styled.div`\r\n  position: relative;\r\n  max-width: 570px;\r\n  z-index: 2;\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    max-width: 100%;\r\n  }\r\n`;\r\n","import { Row, Col } from \"antd\";\r\nimport { withTranslation, TFunction } from \"react-i18next\";\r\nimport { Slide } from \"react-awesome-reveal\";\r\nimport { Button } from \"../../common/Button\";\r\nimport { MiddleBlockSection, Content, ContentWrapper } from \"./styles\";\r\nimport { VideoIcon } from \"../../common/VideoIcon\";\r\nimport { PngIcon } from \"../../common/PngIcon\";\r\n\r\ninterface MiddleBlockProps {\r\n  title: string;\r\n  content: string;\r\n  button: string;\r\n  t: TFunction;\r\n  bgImage?: string;\r\n  bgVideo?: string;\r\n  scrollto?: string;\r\n}\r\n\r\nconst MiddleBlock = ({ title, content, button, t, bgImage, bgVideo, scrollto }: MiddleBlockProps) => {\r\n  const scrollTo = (id: string) => {\r\n    const element = document.getElementById(id) as HTMLDivElement;\r\n    element.scrollIntoView({\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <MiddleBlockSection>\r\n      {bgVideo ? (\r\n        <VideoIcon src={bgVideo} width=\"100%\" height=\"100%\" />\r\n      ) : bgImage ? (\r\n        <PngIcon src={bgImage} width=\"100%\" height=\"100%\" />\r\n      ) : null}\r\n      <Slide direction=\"up\" triggerOnce>\r\n        <Row justify=\"center\" align=\"middle\">\r\n          <ContentWrapper>\r\n            <Col lg={24} md={24} sm={24} xs={24}>\r\n              <h6>{t(title)}</h6>\r\n              <Content>{t(content)}</Content>\r\n              {button && (\r\n                <Button name=\"submit\" onClick={() => scrollTo(scrollto || \"mission\")}>\r\n                  {t(button)}\r\n                </Button>\r\n              )}\r\n            </Col>\r\n          </ContentWrapper>\r\n        </Row>\r\n      </Slide>\r\n    </MiddleBlockSection>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(MiddleBlock);\r\n"],"names":["PngIcon","_ref","src","width","height","_jsx","concat","alt","VideoIcon","_ref$controls","controls","autoPlay","loop","muted","children","MiddleBlockSection","styled","section","_templateObject","_taggedTemplateLiteral","Content","p","_templateObject2","ContentWrapper","div","_templateObject3","withTranslation","title","content","button","t","bgImage","bgVideo","scrollto","_jsxs","Slide","direction","triggerOnce","Row","justify","align","Col","lg","md","sm","xs","Button","name","onClick","id","document","getElementById","scrollIntoView","behavior"],"sourceRoot":""}